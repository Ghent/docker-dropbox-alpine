#!/usr/bin/with-contenv sh

isOutdated () {
    echo "Checking for latest Dropbox version..."
    outdated=$(su - dbox -s /bin/sh -c "dropbox-cli status | grep \"You\'re using an old version of Dropbox.\"")
    echo "Outdated : ($outdated)"
    if [ -z "$outdated" ]; then
        echo "Dropbox is up-to-date."
        return 0;
    else
        echo "Dropbox is outdated, launching update..."
        return 1;
    fi
}

logDropboxVersions () {
	old_ver=$(cat /opt/dropbox/VERSION)
	last_ver=$(cat /tmp/dropbox/VERSION)
    echo "Updating Dropbox from ($old_ver) to ($last_ver)"
}

downloadDropboxLatest () {
	   tmpdir=$(mktemp -d)
	   echo "Downloading latest Dropbox version"
	   curl -L "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf - -C $tmpdir
       rm -rf /tmp/dropbox && mkdir -p /tmp/dropbox
       mv $tmpdir/.dropbox-dist/* /tmp/dropbox/
       rm -rf $tmpdir
}

replaceOldDropboxVersion () {
    old_version=$(cat /opt/dropbox/VERSION)
    rm -rf /opt/dropbox/*
    mv /tmp/dropbox/* /opt/dropbox/
    version=$(cat /opt/dropbox/VERSION)
    echo "Dropbox successfully updated to v($version)."
}

stopRunningService () {
    echo "Stopping running dropbox service."
    #forbid anyone except root to read or execute files inside drobpbox
    chmod 700 /opt/dropbox
    #get pid for dropbox process, then kill it
    pid=$(pgrep -f "dropbox start -i")
    echo "dropboxd pid : ($pid)"
    if [ -z "$pid" ]; then
        kill -9 $pid
    fi
}

startDropboxService () {
    echo "Starting dropbox service."
    #releasing "lock" on dropbox folder
    chmod -R 755 /opt/dropbox
}

if [ isOutdated ]; then
    downloadDropboxLatest && logDropboxVersions
    echo "Stopping dropbox service..."
    stopRunningService
    echo "Replacing dropbox files..."
    replaceOldDropboxVersion
    echo "Launching dropbox service..."
    startDropboxService
fi
